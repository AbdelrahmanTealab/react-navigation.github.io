(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([[2448],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return l},kt:function(){return b}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=p(t),b=a,d=m["".concat(s,".").concat(b)]||m[b]||u[b]||i;return t?r.createElement(d,o(o({ref:n},l),{},{components:t})):r.createElement(d,o({ref:n},l))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6511:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return o},metadata:function(){return c},toc:function(){return s},default:function(){return l}});var r=t(74034),a=t(79973),i=(t(67294),t(3905)),o={id:"hiding-tabbar-in-screens",title:"Hiding tab bar in specific screens",sidebar_label:"Hiding tab bar in specific screens"},c={unversionedId:"hiding-tabbar-in-screens",id:"version-6.x/hiding-tabbar-in-screens",isDocsHomePage:!1,title:"Hiding tab bar in specific screens",description:"Sometimes we may want to hide the tab bar in specific screens in a stack navigator nested in a tab navigator. Let's say we have 5 screens",source:"@site/versioned_docs/version-6.x/hiding-tabbar-in-screens.md",sourceDirName:".",slug:"/hiding-tabbar-in-screens",permalink:"/docs/6.x/hiding-tabbar-in-screens",editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-6.x/hiding-tabbar-in-screens.md",version:"6.x",sidebar_label:"Hiding tab bar in specific screens",frontMatter:{id:"hiding-tabbar-in-screens",title:"Hiding tab bar in specific screens",sidebar_label:"Hiding tab bar in specific screens"},sidebar:"version-6.x/docs",previous:{title:"Supporting safe areas",permalink:"/docs/6.x/handling-safe-area"},next:{title:"Different status bar configuration based on route",permalink:"/docs/6.x/status-bar"}},s=[],p={toc:s};function l(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Sometimes we may want to hide the tab bar in specific screens in a stack navigator nested in a tab navigator. Let's say we have 5 screens: ",(0,i.kt)("inlineCode",{parentName:"p"},"Home"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Feed"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Notifications"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Profile")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Settings"),", and your navigation structure looks like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'function HomeStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name="Home" component={Home} />\n      <Stack.Screen name="Profile" component={Profile} />\n      <Stack.Screen name="Settings" component={Settings} />\n    </Stack.Navigator>\n  );\n}\n\nfunction App() {\n  return (\n    <Tab.Navigator>\n      <Tab.Screen name="Home" component={HomeStack} />\n      <Tab.Screen name="Feed" component={Feed} />\n      <Tab.Screen name="Notifications" component={Notifications} />\n    </Tab.Navigator>\n  );\n}\n')),(0,i.kt)("p",null,"With this structure, when we navigate to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Profile")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"Settings")," screen, the tab bar will still stay visible over those screens."),(0,i.kt)("p",null,"But if we want to show the tab bar only on the ",(0,i.kt)("inlineCode",{parentName:"p"},"Home"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Feed")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Notifications")," screens, but not on the ",(0,i.kt)("inlineCode",{parentName:"p"},"Profile")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Settings")," screens, we'll need to change the navigation structure. The easiest way to achieve this is to nest the tab navigator inside the first screen of the stack instead of nesting stack inside tab navigator:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'function HomeTabs() {\n  return (\n    <Tab.Navigator>\n      <Tab.Screen name="Home" component={Home} />\n      <Tab.Screen name="Feed" component={Feed} />\n      <Tab.Screen name="Notifications" component={Notifications} />\n    </Tab.Navigator>\n  );\n}\n\nfunction App() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name="Home" component={HomeTabs} />\n      <Stack.Screen name="Profile" component={Profile} />\n      <Stack.Screen name="Settings" component={Settings} />\n    </Stack.Navigator>\n  );\n}\n')),(0,i.kt)("p",null,"After re-organizing the navigation structure, now if we navigate to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Profile")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"Settings")," screens, the tab bar won't be visible over the screen anymore."))}l.isMDXComponent=!0}}]);