"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([[53508],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return b}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(a),m=r,b=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return a?n.createElement(b,i(i({ref:t},c),{},{components:a})):n.createElement(b,i({ref:t},c))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},85162:function(e,t,a){a.d(t,{Z:function(){return i}});var n=a(67294),r=a(86010),o={tabItem:"tabItem_Ymn6"};function i(e){var t=e.children,a=e.hidden,i=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,i),hidden:a},t)}},74866:function(e,t,a){a.d(t,{Z:function(){return y}});var n=a(83117),r=a(67294),o=a(86010),i=a(12466),l=a(16550),s=a(91980),u=a(67392),c=a(50012);function p(e){return function(e){return r.Children.map(e,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function d(e){var t=e.values,a=e.children;return(0,r.useMemo)((function(){var e=null!=t?t:p(a);return function(e){var t=(0,u.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,a])}function m(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function b(e){var t=e.queryString,a=void 0!==t&&t,n=e.groupId,o=(0,l.k6)(),i=function(e){var t=e.queryString,a=void 0!==t&&t,n=e.groupId;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:a,groupId:n});return[(0,s._X)(i),(0,r.useCallback)((function(e){if(i){var t=new URLSearchParams(o.location.search);t.set(i,e),o.replace(Object.assign({},o.location,{search:t.toString()}))}}),[i,o])]}function h(e){var t,a,n,o,i=e.defaultValue,l=e.queryString,s=void 0!==l&&l,u=e.groupId,p=d(e),h=(0,r.useState)((function(){return function(e){var t,a=e.defaultValue,n=e.tabValues;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!m({value:a,tabValues:n}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+a+'" but none of its children has the corresponding value. Available values are: '+n.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return a}var r=null!=(t=n.find((function(e){return e.default})))?t:n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:i,tabValues:p})})),v=h[0],f=h[1],k=b({queryString:s,groupId:u}),g=k[0],N=k[1],y=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),a=(0,c.Nk)(t),n=a[0],o=a[1],[n,(0,r.useCallback)((function(e){t&&o.set(e)}),[t,o])]),C=y[0],T=y[1],w=function(){var e=null!=g?g:C;return m({value:e,tabValues:p})?e:null}();return(0,r.useLayoutEffect)((function(){w&&f(w)}),[w]),{selectedValue:v,selectValue:(0,r.useCallback)((function(e){if(!m({value:e,tabValues:p}))throw new Error("Can't select invalid tab value="+e);f(e),N(e),T(e)}),[N,T,p]),tabValues:p}}var v=a(72389),f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){var t=e.className,a=e.block,l=e.selectedValue,s=e.selectValue,u=e.tabValues,c=[],p=(0,i.o5)().blockElementScrollPositionUntilNextRender,d=function(e){var t=e.currentTarget,a=c.indexOf(t),n=u[a].value;n!==l&&(p(t),s(n))},m=function(e){var t,a=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var n,r=c.indexOf(e.currentTarget)+1;a=null!=(n=c[r])?n:c[0];break;case"ArrowLeft":var o,i=c.indexOf(e.currentTarget)-1;a=null!=(o=c[i])?o:c[c.length-1]}null==(t=a)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},u.map((function(e){var t=e.value,a=e.label,i=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:function(e){return c.push(e)},onKeyDown:m,onClick:d},i,{className:(0,o.Z)("tabs__item",f.tabItem,null==i?void 0:i.className,{"tabs__item--active":l===t})}),null!=a?a:t)})))}function g(e){var t=e.lazy,a=e.children,n=e.selectedValue;if(a=Array.isArray(a)?a:[a],t){var o=a.find((function(e){return e.props.value===n}));return o?(0,r.cloneElement)(o,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n})})))}function N(e){var t=h(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",f.tabList)},r.createElement(k,(0,n.Z)({},e,t)),r.createElement(g,(0,n.Z)({},e,t)))}function y(e){var t=(0,v.Z)();return r.createElement(N,(0,n.Z)({key:String(t)},e))}},19887:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return v},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return m}});var n=a(83117),r=a(80102),o=(a(67294),a(3905)),i=a(74866),l=a(85162),s=["components"],u={id:"material-bottom-tab-navigator",title:"Material Bottom Tabs Navigator",sidebar_label:"Material Bottom Tabs"},c=void 0,p={unversionedId:"material-bottom-tab-navigator",id:"version-5.x/material-bottom-tab-navigator",title:"Material Bottom Tabs Navigator",description:"A material-design themed tab bar on the bottom of the screen that lets you switch between different routes with animation. Routes are lazily initialized - their screen components are not mounted until they are first focused.",source:"@site/versioned_docs/version-5.x/material-bottom-tab-navigator.md",sourceDirName:".",slug:"/material-bottom-tab-navigator",permalink:"/docs/5.x/material-bottom-tab-navigator",draft:!1,editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-5.x/material-bottom-tab-navigator.md",tags:[],version:"5.x",frontMatter:{id:"material-bottom-tab-navigator",title:"Material Bottom Tabs Navigator",sidebar_label:"Material Bottom Tabs"},sidebar:"version-5.x/docs",previous:{title:"Bottom Tabs",permalink:"/docs/5.x/bottom-tab-navigator"},next:{title:"Material Top Tabs",permalink:"/docs/5.x/material-top-tab-navigator"}},d={},m=[{value:"API Definition",id:"api-definition",level:2},{value:"RouteConfigs",id:"routeconfigs",level:2},{value:"Props",id:"props",level:3},{value:"<code>initialRouteName</code>",id:"initialroutename",level:4},{value:"<code>screenOptions</code>",id:"screenoptions",level:4},{value:"<code>backBehavior</code>",id:"backbehavior",level:4},{value:"<code>shifting</code>",id:"shifting",level:4},{value:"<code>labeled</code>",id:"labeled",level:4},{value:"<code>activeColor</code>",id:"activecolor",level:4},{value:"<code>inactiveColor</code>",id:"inactivecolor",level:4},{value:"<code>barStyle</code>",id:"barstyle",level:4},{value:"Options",id:"options",level:3},{value:"<code>title</code>",id:"title",level:4},{value:"<code>tabBarIcon</code>",id:"tabbaricon",level:4},{value:"<code>tabBarColor</code>",id:"tabbarcolor",level:4},{value:"<code>tabBarLabel</code>",id:"tabbarlabel",level:4},{value:"<code>tabBarBadge</code>",id:"tabbarbadge",level:4},{value:"<code>tabBarAccessibilityLabel</code>",id:"tabbaraccessibilitylabel",level:4},{value:"<code>tabBarTestID</code>",id:"tabbartestid",level:4},{value:"Events",id:"events",level:3},{value:"<code>tabPress</code>",id:"tabpress",level:4},{value:"Helpers",id:"helpers",level:3},{value:"<code>jumpTo</code>",id:"jumpto",level:4},{value:"Example",id:"example",level:2},{value:"Using with <code>react-native-paper</code> (optional)",id:"using-with-react-native-paper-optional",level:2}],b={toc:m},h="wrapper";function v(e){var t=e.components,a=(0,r.Z)(e,s);return(0,o.kt)(h,(0,n.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"A material-design themed tab bar on the bottom of the screen that lets you switch between different routes with animation. Routes are lazily initialized - their screen components are not mounted until they are first focused."),(0,o.kt)("p",null,"This wraps the ",(0,o.kt)("a",{parentName:"p",href:"https://callstack.github.io/react-native-paper/bottom-navigation.html"},(0,o.kt)("inlineCode",{parentName:"a"},"BottomNavigation"))," component from ",(0,o.kt)("a",{parentName:"p",href:"https://reactnativepaper.com"},(0,o.kt)("inlineCode",{parentName:"a"},"react-native-paper")),". If you ",(0,o.kt)("a",{parentName:"p",href:"https://callstack.github.io/react-native-paper/getting-started.html"},"configure the Babel plugin"),", it won't include the whole ",(0,o.kt)("inlineCode",{parentName:"p"},"react-native-paper")," library in your bundle."),(0,o.kt)("img",{src:"/assets/navigators/tabs/material-bottom-tabs.gif",style:{width:"420px",maxWidth:"100%",margin:"16px 0"}}),(0,o.kt)("p",null,"To use this navigator, ensure that you have ",(0,o.kt)("a",{parentName:"p",href:"/docs/5.x/getting-started"},(0,o.kt)("inlineCode",{parentName:"a"},"@react-navigation/native")," and its dependencies (follow this guide)"),", then install ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/react-navigation/react-navigation/tree/main/packages/material-bottom-tabs"},(0,o.kt)("inlineCode",{parentName:"a"},"@react-navigation/material-bottom-tabs")),":"),(0,o.kt)(i.Z,{defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @react-navigation/material-bottom-tabs@^5.x react-native-paper react-native-vector-icons\n"))),(0,o.kt)(l.Z,{value:"yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @react-navigation/material-bottom-tabs@^5.x react-native-paper react-native-vector-icons\n")))),(0,o.kt)("p",null,"This API also requires that you install ",(0,o.kt)("inlineCode",{parentName:"p"},"react-native-vector-icons"),"! If you are using Expo managed workflow, it will work without any extra steps. Otherwise, ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/oblador/react-native-vector-icons#installation"},"follow these installation instructions"),"."),(0,o.kt)("p",null,"To use this tab navigator, import it from ",(0,o.kt)("inlineCode",{parentName:"p"},"@react-navigation/material-bottom-tabs")),(0,o.kt)("h2",{id:"api-definition"},"API Definition"),(0,o.kt)("p",null,"To use this tab navigator, import it from ",(0,o.kt)("inlineCode",{parentName:"p"},"@react-navigation/material-bottom-tabs"),":"),(0,o.kt)("samp",{id:"material-tab-based-navigation-minimal"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { createMaterialBottomTabNavigator } from \'@react-navigation/material-bottom-tabs\';\n\nconst Tab = createMaterialBottomTabNavigator();\n\nfunction MyTabs() {\n  return (\n    <Tab.Navigator>\n      <Tab.Screen name="Home" component={HomeScreen} />\n      <Tab.Screen name="Settings" component={SettingsScreen} />\n    </Tab.Navigator>\n  );\n}\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"For a complete usage guide please visit ",(0,o.kt)("a",{parentName:"p",href:"/docs/5.x/tab-based-navigation"},"Tab Navigation"))),(0,o.kt)("h2",{id:"routeconfigs"},"RouteConfigs"),(0,o.kt)("p",null,"The route configs object is a mapping from route name to a route config."),(0,o.kt)("h3",{id:"props"},"Props"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Tab.Navigator")," component accepts following props:"),(0,o.kt)("h4",{id:"initialroutename"},(0,o.kt)("inlineCode",{parentName:"h4"},"initialRouteName")),(0,o.kt)("p",null,"The name of the route to render on first load of the navigator."),(0,o.kt)("h4",{id:"screenoptions"},(0,o.kt)("inlineCode",{parentName:"h4"},"screenOptions")),(0,o.kt)("p",null,"Default options to use for the screens in the navigator."),(0,o.kt)("h4",{id:"backbehavior"},(0,o.kt)("inlineCode",{parentName:"h4"},"backBehavior")),(0,o.kt)("p",null,"Behavior of back button handling."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"initialRoute")," to return to initial tab"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"order")," to return to previous tab (in the order they are shown in the tab bar)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"history")," to return to last visited tab"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"none")," to not handle back button")),(0,o.kt)("h4",{id:"shifting"},(0,o.kt)("inlineCode",{parentName:"h4"},"shifting")),(0,o.kt)("p",null,"Whether the shifting style is used, the active tab icon shifts up to show the label and the inactive tabs won't have a label."),(0,o.kt)("p",null,"By default, this is ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," when you have more than 3 tabs. Pass ",(0,o.kt)("inlineCode",{parentName:"p"},"shifting={false}")," to explicitly disable this animation, or ",(0,o.kt)("inlineCode",{parentName:"p"},"shifting={true}")," to always use this animation."),(0,o.kt)("h4",{id:"labeled"},(0,o.kt)("inlineCode",{parentName:"h4"},"labeled")),(0,o.kt)("p",null,"Whether to show labels in tabs. When ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),", only icons will be displayed."),(0,o.kt)("h4",{id:"activecolor"},(0,o.kt)("inlineCode",{parentName:"h4"},"activeColor")),(0,o.kt)("p",null,"Custom color for icon and label in the active tab."),(0,o.kt)("h4",{id:"inactivecolor"},(0,o.kt)("inlineCode",{parentName:"h4"},"inactiveColor")),(0,o.kt)("p",null,"Custom color for icon and label in the inactive tab."),(0,o.kt)("h4",{id:"barstyle"},(0,o.kt)("inlineCode",{parentName:"h4"},"barStyle")),(0,o.kt)("p",null,"Style for the bottom navigation bar. You can pass custom background color here:"),(0,o.kt)("samp",{id:"material-bottom-tab-styled"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'<Tab.Navigator\n  initialRouteName="Home"\n  activeColor="#f0edf6"\n  inactiveColor="#3e2465"\n  barStyle={{ backgroundColor: \'#694fad\' }}\n>\n  {/* ... */}\n</Tab.Navigator>\n')),(0,o.kt)("p",null,"If you have a translucent navigation bar on Android, you can also set a bottom padding here:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'<Tab.Navigator\n  initialRouteName="Home"\n  activeColor="#f0edf6"\n  inactiveColor="#3e2465"\n  barStyle={{ paddingBottom: 48 }}\n>\n  {/* ... */}\n</Tab.Navigator>\n')),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("p",null,"The following ",(0,o.kt)("a",{parentName:"p",href:"/docs/5.x/screen-options"},"options")," can be used to configure the screens in the navigator:"),(0,o.kt)("h4",{id:"title"},(0,o.kt)("inlineCode",{parentName:"h4"},"title")),(0,o.kt)("p",null,"Generic title that can be used as a fallback for ",(0,o.kt)("inlineCode",{parentName:"p"},"headerTitle")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"tabBarLabel"),"."),(0,o.kt)("h4",{id:"tabbaricon"},(0,o.kt)("inlineCode",{parentName:"h4"},"tabBarIcon")),(0,o.kt)("p",null,"Function that given ",(0,o.kt)("inlineCode",{parentName:"p"},"{ focused: boolean, color: string }")," returns a React.Node, to display in the tab bar."),(0,o.kt)("h4",{id:"tabbarcolor"},(0,o.kt)("inlineCode",{parentName:"h4"},"tabBarColor")),(0,o.kt)("p",null,"Color for the tab bar when the tab corresponding to the screen is active. Used for the ripple effect. This is only supported when ",(0,o.kt)("inlineCode",{parentName:"p"},"shifting")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,o.kt)("h4",{id:"tabbarlabel"},(0,o.kt)("inlineCode",{parentName:"h4"},"tabBarLabel")),(0,o.kt)("p",null,"Title string of a tab displayed in the tab bar. When undefined, scene ",(0,o.kt)("inlineCode",{parentName:"p"},"title")," is used. To hide, see ",(0,o.kt)("inlineCode",{parentName:"p"},"labeled")," option in the previous section."),(0,o.kt)("h4",{id:"tabbarbadge"},(0,o.kt)("inlineCode",{parentName:"h4"},"tabBarBadge")),(0,o.kt)("p",null,"Badge to show on the tab icon, can be ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," to show a dot, ",(0,o.kt)("inlineCode",{parentName:"p"},"string")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"number")," to show text."),(0,o.kt)("h4",{id:"tabbaraccessibilitylabel"},(0,o.kt)("inlineCode",{parentName:"h4"},"tabBarAccessibilityLabel")),(0,o.kt)("p",null,"Accessibility label for the tab button. This is read by the screen reader when the user taps the tab. It's recommended to set this if you don't have a label for the tab."),(0,o.kt)("h4",{id:"tabbartestid"},(0,o.kt)("inlineCode",{parentName:"h4"},"tabBarTestID")),(0,o.kt)("p",null,"ID to locate this tab button in tests."),(0,o.kt)("h3",{id:"events"},"Events"),(0,o.kt)("p",null,"The navigator can ",(0,o.kt)("a",{parentName:"p",href:"/docs/5.x/navigation-events"},"emit events")," on certain actions. Supported events are:"),(0,o.kt)("h4",{id:"tabpress"},(0,o.kt)("inlineCode",{parentName:"h4"},"tabPress")),(0,o.kt)("p",null,"This event is fired when the user presses the tab button for the current screen in the tab bar. By default a tab press does several things:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If the tab is not focused, tab press will focus that tab"),(0,o.kt)("li",{parentName:"ul"},"If the tab is already focused:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"If the screen for the tab renders a scroll view, you can use ",(0,o.kt)("a",{parentName:"li",href:"/docs/5.x/use-scroll-to-top"},(0,o.kt)("inlineCode",{parentName:"a"},"useScrollToTop"))," to scroll it to top"),(0,o.kt)("li",{parentName:"ul"},"If the screen for the tab renders a stack navigator, a ",(0,o.kt)("inlineCode",{parentName:"li"},"popToTop")," action is performed on the stack")))),(0,o.kt)("p",null,"To prevent the default behavior, you can call ",(0,o.kt)("inlineCode",{parentName:"p"},"event.preventDefault"),":"),(0,o.kt)("samp",{id:"material-bottom-tab-prevent-default"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"React.useEffect(() => {\n  const unsubscribe = navigation.addListener('tabPress', (e) => {\n    // Prevent default behavior\n\n    e.preventDefault();\n    // Do something manually\n    // ...\n  });\n\n  return unsubscribe;\n}, [navigation]);\n")),(0,o.kt)("h3",{id:"helpers"},"Helpers"),(0,o.kt)("p",null,"The tab navigator adds the following methods to the navigation prop:"),(0,o.kt)("h4",{id:"jumpto"},(0,o.kt)("inlineCode",{parentName:"h4"},"jumpTo")),(0,o.kt)("p",null,"Navigates to an existing screen in the tab navigator. The method accepts following arguments:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"name")," - ",(0,o.kt)("em",{parentName:"li"},"string")," - Name of the route to jump to."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"params")," - ",(0,o.kt)("em",{parentName:"li"},"object")," - Screen params to merge into the destination route (found in the pushed screen through ",(0,o.kt)("inlineCode",{parentName:"li"},"route.params"),").")),(0,o.kt)("samp",{id:"material-tab-jump-to"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"navigation.jumpTo('Profile', { name: 'Micha\u015b' });\n")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("samp",{id:"material-bottom-tab-example"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { createMaterialBottomTabNavigator } from \'@react-navigation/material-bottom-tabs\';\nimport MaterialCommunityIcons from \'react-native-vector-icons/MaterialCommunityIcons\';\n\nconst Tab = createMaterialBottomTabNavigator();\n\nfunction MyTabs() {\n  return (\n    <Tab.Navigator\n      initialRouteName="Feed"\n      activeColor="#e91e63"\n      barStyle={{ backgroundColor: \'tomato\' }}\n    >\n      <Tab.Screen\n        name="Feed"\n        component={Feed}\n        options={{\n          tabBarLabel: \'Home\',\n          tabBarIcon: ({ color }) => (\n            <MaterialCommunityIcons name="home" color={color} size={26} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name="Notifications"\n        component={Notifications}\n        options={{\n          tabBarLabel: \'Updates\',\n          tabBarIcon: ({ color }) => (\n            <MaterialCommunityIcons name="bell" color={color} size={26} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name="Profile"\n        component={Profile}\n        options={{\n          tabBarLabel: \'Profile\',\n          tabBarIcon: ({ color }) => (\n            <MaterialCommunityIcons name="account" color={color} size={26} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n')),(0,o.kt)("h2",{id:"using-with-react-native-paper-optional"},"Using with ",(0,o.kt)("inlineCode",{parentName:"h2"},"react-native-paper")," (optional)"),(0,o.kt)("p",null,"You can use the theming support in ",(0,o.kt)("inlineCode",{parentName:"p"},"react-native-paper")," to customize the material bottom navigation by wrapping your app in ",(0,o.kt)("a",{parentName:"p",href:"https://callstack.github.io/react-native-paper/getting-started.html"},(0,o.kt)("inlineCode",{parentName:"a"},"Provider")," from ",(0,o.kt)("inlineCode",{parentName:"a"},"react-native-paper")),". A common use case for this can be to customize the background color for the screens when your app has a dark theme. Follow the ",(0,o.kt)("a",{parentName:"p",href:"https://callstack.github.io/react-native-paper/theming.html"},"instructions on ",(0,o.kt)("inlineCode",{parentName:"a"},"react-native-paper"),"'s documentation")," to learn how to customize the theme."))}v.isMDXComponent=!0}}]);