"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([[86478],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",v={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),p=l(n),f=r,d=p["".concat(c,".").concat(f)]||p[f]||v[f]||i;return n?a.createElement(d,o(o({ref:t},s),{},{components:n})):a.createElement(d,o({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=f;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u[p]="string"==typeof e?e:r,o[1]=u;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},85162:function(e,t,n){n.d(t,{Z:function(){return o}});var a=n(67294),r=n(86010),i={tabItem:"tabItem_Ymn6"};function o(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,o),hidden:n},t)}},74866:function(e,t,n){n.d(t,{Z:function(){return N}});var a=n(83117),r=n(67294),i=n(86010),o=n(12466),u=n(16550),c=n(91980),l=n(67392),s=n(50012);function p(e){return function(e){return r.Children.map(e,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function v(e){var t=e.values,n=e.children;return(0,r.useMemo)((function(){var e=null!=t?t:p(n);return function(e){var t=(0,l.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function f(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function d(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId,i=(0,u.k6)(),o=function(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:n,groupId:a});return[(0,c._X)(o),(0,r.useCallback)((function(e){if(o){var t=new URLSearchParams(i.location.search);t.set(o,e),i.replace(Object.assign({},i.location,{search:t.toString()}))}}),[o,i])]}function m(e){var t,n,a,i,o=e.defaultValue,u=e.queryString,c=void 0!==u&&u,l=e.groupId,p=v(e),m=(0,r.useState)((function(){return function(e){var t,n=e.defaultValue,a=e.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var r=null!=(t=a.find((function(e){return e.default})))?t:a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:o,tabValues:p})})),b=m[0],g=m[1],h=d({queryString:c,groupId:l}),k=h[0],y=h[1],N=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:l}.groupId),n=(0,s.Nk)(t),a=n[0],i=n[1],[a,(0,r.useCallback)((function(e){t&&i.set(e)}),[t,i])]),w=N[0],S=N[1],E=function(){var e=null!=k?k:w;return f({value:e,tabValues:p})?e:null}();return(0,r.useLayoutEffect)((function(){E&&g(E)}),[E]),{selectedValue:b,selectValue:(0,r.useCallback)((function(e){if(!f({value:e,tabValues:p}))throw new Error("Can't select invalid tab value="+e);g(e),y(e),S(e)}),[y,S,p]),tabValues:p}}var b=n(72389),g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){var t=e.className,n=e.block,u=e.selectedValue,c=e.selectValue,l=e.tabValues,s=[],p=(0,o.o5)().blockElementScrollPositionUntilNextRender,v=function(e){var t=e.currentTarget,n=s.indexOf(t),a=l[n].value;a!==u&&(p(t),c(a))},f=function(e){var t,n=null;switch(e.key){case"Enter":v(e);break;case"ArrowRight":var a,r=s.indexOf(e.currentTarget)+1;n=null!=(a=s[r])?a:s[0];break;case"ArrowLeft":var i,o=s.indexOf(e.currentTarget)-1;n=null!=(i=s[o])?i:s[s.length-1]}null==(t=n)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},l.map((function(e){var t=e.value,n=e.label,o=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:u===t?0:-1,"aria-selected":u===t,key:t,ref:function(e){return s.push(e)},onKeyDown:f,onClick:v},o,{className:(0,i.Z)("tabs__item",g.tabItem,null==o?void 0:o.className,{"tabs__item--active":u===t})}),null!=n?n:t)})))}function k(e){var t=e.lazy,n=e.children,a=e.selectedValue;if(n=Array.isArray(n)?n:[n],t){var i=n.find((function(e){return e.props.value===a}));return i?(0,r.cloneElement)(i,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},n.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a})})))}function y(e){var t=m(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",g.tabList)},r.createElement(h,(0,a.Z)({},e,t)),r.createElement(k,(0,a.Z)({},e,t)))}function N(e){var t=(0,b.Z)();return r.createElement(y,(0,a.Z)({key:String(t)},e))}},28515:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return u},metadata:function(){return l},toc:function(){return p}});var a=n(83117),r=n(80102),i=(n(67294),n(3905)),o=(n(74866),n(85162),["components"]),u={id:"native-stack-navigator",title:"Native Stack Navigator",sidebar_label:"Native Stack"},c=void 0,l={unversionedId:"native-stack-navigator",id:"version-5.x/native-stack-navigator",title:"Native Stack Navigator",description:"Provides a way for your app to transition between screens where each new screen is placed on top of a stack.",source:"@site/versioned_docs/version-5.x/native-stack-navigator.md",sourceDirName:".",slug:"/native-stack-navigator",permalink:"/docs/5.x/native-stack-navigator",draft:!1,editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-5.x/native-stack-navigator.md",tags:[],version:"5.x",frontMatter:{id:"native-stack-navigator",title:"Native Stack Navigator",sidebar_label:"Native Stack"},sidebar:"version-5.x/docs",previous:{title:"Stack",permalink:"/docs/5.x/stack-navigator"},next:{title:"Drawer",permalink:"/docs/5.x/drawer-navigator"}},s={},p=[{value:"API Definition",id:"api-definition",level:2}],v={toc:p},f="wrapper";function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)(f,(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Provides a way for your app to transition between screens where each new screen is placed on top of a stack."),(0,i.kt)("p",null,"This navigator uses the native APIs ",(0,i.kt)("inlineCode",{parentName:"p"},"UINavigationController")," on iOS and ",(0,i.kt)("inlineCode",{parentName:"p"},"Fragment")," on Android so that navigation built with ",(0,i.kt)("inlineCode",{parentName:"p"},"createNativeStackNavigator")," will behave exactly the same and have the same performance characteristics as apps built natively on top of those APIs."),(0,i.kt)("p",null,"The tradeoff is that ",(0,i.kt)("inlineCode",{parentName:"p"},"createNativeStackNavigator")," isn't quite as customizable, so sometimes you may want to use ",(0,i.kt)("inlineCode",{parentName:"p"},"createStackNavigator")," instead in order to achieve the exact appearance or behaviour that you desire for your app."),(0,i.kt)("p",null,"This navigator does not currently support web. Use ",(0,i.kt)("inlineCode",{parentName:"p"},"createStackNavigator")," for the web navigation in your app instead."),(0,i.kt)("p",null,"To use this navigator, ensure that you have ",(0,i.kt)("a",{parentName:"p",href:"/docs/5.x/getting-started"},(0,i.kt)("inlineCode",{parentName:"a"},"@react-navigation/native")," and its dependencies (follow this guide)"),"."),(0,i.kt)("h2",{id:"api-definition"},"API Definition"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\ud83d\udca1 If you encounter any bugs while using ",(0,i.kt)("inlineCode",{parentName:"p"},"createNativeStackNavigator"),", please open issues on ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/software-mansion/react-native-screens"},(0,i.kt)("inlineCode",{parentName:"a"},"react-native-screens"))," rather than the ",(0,i.kt)("inlineCode",{parentName:"p"},"react-navigation")," repository!")),(0,i.kt)("p",null,"To use this navigator, import ",(0,i.kt)("inlineCode",{parentName:"p"},"enableScreens")," from ",(0,i.kt)("inlineCode",{parentName:"p"},"react-native-screens")," and invoke it, and import ",(0,i.kt)("inlineCode",{parentName:"p"},"createNativeStackNavigator")," from ",(0,i.kt)("inlineCode",{parentName:"p"},"react-native-screens/native-stack"),":"),(0,i.kt)("samp",{id:"simple-native-stack"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'import { enableScreens } from \'react-native-screens\';\nimport { createNativeStackNavigator } from \'react-native-screens/native-stack\';\n\nenableScreens();\nconst Stack = createNativeStackNavigator();\n\nfunction MyStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name="Home" component={Home} />\n      <Stack.Screen name="Notifications" component={Notifications} />\n      <Stack.Screen name="Profile" component={Profile} />\n      <Stack.Screen name="Settings" component={Settings} />\n    </Stack.Navigator>\n  );\n}\n')),(0,i.kt)("p",null,"For the full, up-to-date API reference, please refer to the README for ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/software-mansion/react-native-screens/tree/master/native-stack"},"react-native-screens/native-stack"),"."))}d.isMDXComponent=!0}}]);