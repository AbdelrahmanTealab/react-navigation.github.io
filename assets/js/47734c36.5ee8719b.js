"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([[2806],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return d}});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(a),d=i,b=m["".concat(s,".").concat(d)]||m[d]||p[d]||r;return a?n.createElement(b,o(o({ref:t},u),{},{components:a})):n.createElement(b,o({ref:t},u))}));function d(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},58215:function(e,t,a){var n=a(67294);t.Z=function(e){var t=e.children,a=e.hidden,i=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:i},t)}},55064:function(e,t,a){a.d(t,{Z:function(){return c}});var n=a(67294),i=a(79443);var r=function(){var e=(0,n.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},o=a(86010),l="tabItem_1uMI",s="tabItemActive_2DSg";var c=function(e){var t,a=e.lazy,i=e.block,c=e.defaultValue,u=e.values,p=e.groupId,m=e.className,d=n.Children.toArray(e.children),b=null!=u?u:d.map((function(e){return{value:e.props.value,label:e.props.label}})),h=null!=c?c:null==(t=d.find((function(e){return e.props.default})))?void 0:t.props.value,f=r(),v=f.tabGroupChoices,g=f.setTabGroupChoices,k=(0,n.useState)(h),N=k[0],y=k[1],C=[];if(null!=p){var w=v[p];null!=w&&w!==N&&b.some((function(e){return e.value===w}))&&y(w)}var T=function(e){var t=e.currentTarget,a=C.indexOf(t),n=b[a].value;y(n),null!=p&&(g(p,n),setTimeout((function(){var e,a,n,i,r,o,l,c;(e=t.getBoundingClientRect(),a=e.top,n=e.left,i=e.bottom,r=e.right,o=window,l=o.innerHeight,c=o.innerWidth,a>=0&&r<=c&&i<=l&&n>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((function(){return t.classList.remove(s)}),2e3))}),150))},x=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=C.indexOf(e.target)+1;a=C[n]||C[0];break;case"ArrowLeft":var i=C.indexOf(e.target)-1;a=C[i]||C[C.length-1]}null==(t=a)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":i},m)},b.map((function(e){var t=e.value,a=e.label;return n.createElement("li",{role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,className:(0,o.Z)("tabs__item",l,{"tabs__item--active":N===t}),key:t,ref:function(e){return C.push(e)},onKeyDown:x,onFocus:T,onClick:T},null!=a?a:t)}))),a?(0,n.cloneElement)(d.filter((function(e){return e.props.value===N}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},d.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==N})}))))}},79443:function(e,t,a){var n=(0,a(67294).createContext)(void 0);t.Z=n},48390:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return m},default:function(){return b}});var n=a(87462),i=a(63366),r=(a(67294),a(3905)),o=a(55064),l=a(58215),s=["components"],c={id:"material-bottom-tab-navigator",title:"createMaterialBottomTabNavigator",sidebar_label:"createMaterialBottomTabNavigator"},u=void 0,p={unversionedId:"material-bottom-tab-navigator",id:"version-3.x/material-bottom-tab-navigator",isDocsHomePage:!1,title:"createMaterialBottomTabNavigator",description:"A material-design themed tab bar on the bottom of the screen that lets you switch between different routes. Routes are lazily initialized -- their screen components are not mounted until they are first focused.",source:"@site/versioned_docs/version-3.x/material-bottom-tab-navigator.md",sourceDirName:".",slug:"/material-bottom-tab-navigator",permalink:"/docs/3.x/material-bottom-tab-navigator",editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-3.x/material-bottom-tab-navigator.md",tags:[],version:"3.x",frontMatter:{id:"material-bottom-tab-navigator",title:"createMaterialBottomTabNavigator",sidebar_label:"createMaterialBottomTabNavigator"},sidebar:"version-3.x-docs",previous:{title:"createBottomTabNavigator",permalink:"/docs/3.x/bottom-tab-navigator"},next:{title:"createMaterialTopTabNavigator",permalink:"/docs/3.x/material-top-tab-navigator"}},m=[{value:"RouteConfigs",id:"routeconfigs",children:[]},{value:"MaterialBottomTabNavigatorConfig",id:"materialbottomtabnavigatorconfig",children:[]},{value:"<code>navigationOptions</code> for screens inside of the navigator",id:"navigationoptions-for-screens-inside-of-the-navigator",children:[]},{value:"Using with <code>react-native-paper</code> (optional)",id:"using-with-react-native-paper-optional",children:[]}],d={toc:m};function b(e){var t=e.components,a=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A material-design themed tab bar on the bottom of the screen that lets you switch between different routes. Routes are lazily initialized -- their screen components are not mounted until they are first focused."),(0,r.kt)("img",{src:"/assets/navigators/bottom-navigation.gif",style:{width:"420px",maxWidth:"100%"}}),(0,r.kt)("p",null,"To use this navigator, you need to install ",(0,r.kt)("inlineCode",{parentName:"p"},"react-navigation-material-bottom-tabs")),(0,r.kt)(o.Z,{defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install react-navigation-material-bottom-tabs react-native-paper\n"))),(0,r.kt)(l.Z,{value:"yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add react-navigation-material-bottom-tabs react-native-paper\n")))),(0,r.kt)("p",null,"This API also requires that you install ",(0,r.kt)("inlineCode",{parentName:"p"},"react-native-vector-icons"),"! If you are using Expo, it will just work out of the box. Otherwise, ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/oblador/react-native-vector-icons#installation"},"follow these installation instructions"),"."),(0,r.kt)("p",null,"To use this tab navigator, import it from ",(0,r.kt)("inlineCode",{parentName:"p"},"react-navigation-material-bottom-tabs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { createMaterialBottomTabNavigator } from "react-navigation-material-bottom-tabs";\n\ncreateMaterialBottomTabNavigator(\n  RouteConfigs,\n  MaterialBottomTabNavigatorConfig\n);\n')),(0,r.kt)("p",null,"This library uses the ",(0,r.kt)("a",{parentName:"p",href:"https://callstack.github.io/react-native-paper/bottom-navigation.html"},(0,r.kt)("inlineCode",{parentName:"a"},"BottomNavigation")," component from ",(0,r.kt)("inlineCode",{parentName:"a"},"react-native-paper")),". It doesn't include the whole ",(0,r.kt)("inlineCode",{parentName:"p"},"react-native-paper")," library in your bundle, so you don't need to worry about it."),(0,r.kt)("h2",{id:"routeconfigs"},"RouteConfigs"),(0,r.kt)("p",null,"The route configs object is a mapping from route name to a route config."),(0,r.kt)("h2",{id:"materialbottomtabnavigatorconfig"},"MaterialBottomTabNavigatorConfig"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"shifting")," - Whether the shifting style is used, the active tab appears wider and the inactive tabs won't have a label. By default, this is ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," when you have more than 3 tabs."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"labeled")," - Whether to show labels in tabs. When ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),", only icons will be displayed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"activeColor")," - Custom color for icon and label in the active tab."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"inactiveColor")," - Custom color for icon and label in the inactive tab."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"barStyle")," - Style for the bottom navigation bar. You can set a bottom padding here if you have a translucent navigation bar on Android: ",(0,r.kt)("inlineCode",{parentName:"li"},"barStyle={{ paddingBottom: 48 }}"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"initialRouteName")," - The routeName for the initial tab route when first loading."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"order")," - Array of routeNames which defines the order of the tabs."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"paths")," - Provide a mapping of routeName to path config, which overrides the paths set in the routeConfigs."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"backBehavior")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"initialRoute")," to return to initial tab, ",(0,r.kt)("inlineCode",{parentName:"li"},"order")," to return to previous tab, ",(0,r.kt)("inlineCode",{parentName:"li"},"history")," to return to last visited tab, or ",(0,r.kt)("inlineCode",{parentName:"li"},"none"),".")),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"export default createMaterialBottomTabNavigator({\n  Album: { screen: Album },\n  Library: { screen: Library },\n  History: { screen: History },\n  Cart: { screen: Cart },\n}, {\n  initialRouteName: 'Album',\n  activeColor: '#f0edf6',\n  inactiveColor: '#3e2465',\n  barStyle: { backgroundColor: '#694fad' },\n});\n")),(0,r.kt)("h2",{id:"navigationoptions-for-screens-inside-of-the-navigator"},(0,r.kt)("inlineCode",{parentName:"h2"},"navigationOptions")," for screens inside of the navigator"),(0,r.kt)("h4",{id:"title"},(0,r.kt)("inlineCode",{parentName:"h4"},"title")),(0,r.kt)("p",null,"Generic title that can be used as a fallback for ",(0,r.kt)("inlineCode",{parentName:"p"},"headerTitle")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"tabBarLabel"),"."),(0,r.kt)("h4",{id:"tabbaricon"},(0,r.kt)("inlineCode",{parentName:"h4"},"tabBarIcon")),(0,r.kt)("p",null,"React Element or a function that given ",(0,r.kt)("inlineCode",{parentName:"p"},"{ focused: boolean, horizontal: boolean, tintColor: string }")," returns a React.Node, to display in the tab bar. ",(0,r.kt)("inlineCode",{parentName:"p"},"horizontal")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," when the device is in landscape and ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," when portrait. The icon is re-rendered whenever the device orientation changes."),(0,r.kt)("h4",{id:"tabbarcolor"},(0,r.kt)("inlineCode",{parentName:"h4"},"tabBarColor")),(0,r.kt)("p",null,"Color for the tab bar when the tab corresponding to the screen is active. Used for the ripple effect. This is only supported when ",(0,r.kt)("inlineCode",{parentName:"p"},"shifting")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,r.kt)("h4",{id:"tabbarlabel"},(0,r.kt)("inlineCode",{parentName:"h4"},"tabBarLabel")),(0,r.kt)("p",null,"Title string of a tab displayed in the tab bar. When undefined, scene ",(0,r.kt)("inlineCode",{parentName:"p"},"title")," is used. To hide, see ",(0,r.kt)("inlineCode",{parentName:"p"},"labeled")," option in the previous section."),(0,r.kt)("h4",{id:"tabbaraccessibilitylabel"},(0,r.kt)("inlineCode",{parentName:"h4"},"tabBarAccessibilityLabel")),(0,r.kt)("p",null,"Accessibility label for the tab button. This is read by the screen reader when the user taps the tab. It's recommended to set this if you don't have a label for the tab."),(0,r.kt)("h4",{id:"tabbartestid"},(0,r.kt)("inlineCode",{parentName:"h4"},"tabBarTestID")),(0,r.kt)("p",null,"ID to locate this tab button in tests."),(0,r.kt)("h4",{id:"tabbaronpress"},(0,r.kt)("inlineCode",{parentName:"h4"},"tabBarOnPress")),(0,r.kt)("p",null,"Callback to handle press events; the argument is an object containing:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"navigation"),": navigation prop for the screen"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"defaultHandler"),": the default handler for tab press")),(0,r.kt)("p",null,"Useful for adding a custom logic before the transition to the next scene (the tapped one) starts."),(0,r.kt)("h2",{id:"using-with-react-native-paper-optional"},"Using with ",(0,r.kt)("inlineCode",{parentName:"h2"},"react-native-paper")," (optional)"),(0,r.kt)("p",null,"You can use the theming support in ",(0,r.kt)("inlineCode",{parentName:"p"},"react-native-paper")," to customize the material bottom navigation by wrapping your app in ",(0,r.kt)("a",{parentName:"p",href:"https://callstack.github.io/react-native-paper/getting-started.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Provider")," from ",(0,r.kt)("inlineCode",{parentName:"a"},"react-native-paper")),". A common use case for this can be to customize the background color for the screens when your app has a dark theme. Follow the ",(0,r.kt)("a",{parentName:"p",href:"https://callstack.github.io/react-native-paper/theming.html"},"instructions on ",(0,r.kt)("inlineCode",{parentName:"a"},"react-native-paper"),"'s documentation")," to learn how to customize the theme."))}b.isMDXComponent=!0},86010:function(e,t,a){function n(e){var t,a,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(i&&(i+=" "),i+=a);else for(t in e)e[t]&&(i&&(i+=" "),i+=t);return i}function i(){for(var e,t,a=0,i="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(i&&(i+=" "),i+=t);return i}a.d(t,{Z:function(){return i}})}}]);