(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([[3428],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(t),m=o,f=d["".concat(p,".").concat(m)]||d[m]||l[m]||a;return t?r.createElement(f,i(i({ref:n},u),{},{components:t})):r.createElement(f,i({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},36891:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var r=t(74034),o=t(79973),a=(t(67294),t(3905)),i={id:"group",title:"Group",sidebar_label:"Group"},c={unversionedId:"group",id:"version-6.x/group",isDocsHomePage:!1,title:"Group",description:"Group components are used to group several screens inside a navigator.",source:"@site/versioned_docs/version-6.x/screen.md",sourceDirName:".",slug:"/group",permalink:"/docs/6.x/group",editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-6.x/screen.md",version:"6.x",sidebar_label:"Group",frontMatter:{id:"group",title:"Group",sidebar_label:"Group"},sidebar:"version-6.x/docs",previous:{title:"ServerContainer",permalink:"/docs/6.x/server-container"},next:{title:"Screen",permalink:"/docs/6.x/screen"}},p=[{value:"Props",id:"props",children:[{value:"<code>screenOptions</code>",id:"screenoptions",children:[]}]}],s={toc:p};function u(e){var n=e.components,t=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Group")," components are used to group several ",(0,a.kt)("a",{parentName:"p",href:"/docs/6.x/group"},"screens")," inside a navigator."),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"Group")," is returned from a ",(0,a.kt)("inlineCode",{parentName:"p"},"createNavigatorX")," function:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const Stack = createStackNavigator(); // Stack contains Screen & Navigator properties\n")),(0,a.kt)("p",null,"After creating the navigator, it can be used as children of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Navigator")," component:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'<Stack.Navigator>\n  <Stack.Group>\n    <Stack.Screen name="Home" component={HomeScreen} />\n    <Stack.Screen name="Profile" component={ProfileScreen} />\n  </Stack.Group>\n</Stack.Navigator>\n')),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)("h3",{id:"screenoptions"},(0,a.kt)("inlineCode",{parentName:"h3"},"screenOptions")),(0,a.kt)("p",null,"Options to configure how the screens inside the group get presented in the navigator. It accepts either an object or a function returning an object:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"<Stack.Group\n  screenOptions={{\n    animationPresentation: 'modal',\n  }}\n>\n  {/* screens */}\n</Stack.Group>\n")),(0,a.kt)("p",null,"When you pass a function, it'll receive the ",(0,a.kt)("a",{parentName:"p",href:"/docs/6.x/route-prop"},(0,a.kt)("inlineCode",{parentName:"a"},"route"))," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/6.x/navigation-prop"},(0,a.kt)("inlineCode",{parentName:"a"},"navigation")),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"<Stack.Group\n  screenOptions={({ route, navigation }) => ({\n    title: route.params.title,\n  })}\n>\n  {/* screens */}\n</Stack.Group>\n")),(0,a.kt)("p",null,"These options are merged with the ",(0,a.kt)("inlineCode",{parentName:"p"},"options")," specified in the individual screens, and the screen's options will take precedence over the group's options."),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"/docs/6.x/screen-options"},"Options for screens")," for more details and examples."))}u.isMDXComponent=!0}}]);