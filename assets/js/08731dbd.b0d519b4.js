"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([[88095],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(t),f=a,m=p["".concat(u,".").concat(f)]||p[f]||d[f]||i;return t?r.createElement(m,o(o({ref:n},c),{},{components:t})):r.createElement(m,o({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=f;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},85162:function(e,n,t){t.d(n,{Z:function(){return o}});var r=t(67294),a=t(86010),i={tabItem:"tabItem_Ymn6"};function o(e){var n=e.children,t=e.hidden,o=e.className;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(i.tabItem,o),hidden:t},n)}},74866:function(e,n,t){t.d(n,{Z:function(){return k}});var r=t(83117),a=t(67294),i=t(86010),o=t(12466),l=t(16550),u=t(91980),s=t(67392),c=t(50012);function p(e){return function(e){return a.Children.map(e,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))}(e).map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}}))}function d(e){var n=e.values,t=e.children;return(0,a.useMemo)((function(){var e=null!=n?n:p(t);return function(e){var n=(0,s.l)(e,(function(e,n){return e.value===n.value}));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function f(e){var n=e.value;return e.tabValues.some((function(e){return e.value===n}))}function m(e){var n=e.queryString,t=void 0!==n&&n,r=e.groupId,i=(0,l.k6)(),o=function(e){var n=e.queryString,t=void 0!==n&&n,r=e.groupId;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=r?r:null}({queryString:t,groupId:r});return[(0,u._X)(o),(0,a.useCallback)((function(e){if(o){var n=new URLSearchParams(i.location.search);n.set(o,e),i.replace(Object.assign({},i.location,{search:n.toString()}))}}),[o,i])]}function v(e){var n,t,r,i,o=e.defaultValue,l=e.queryString,u=void 0!==l&&l,s=e.groupId,p=d(e),v=(0,a.useState)((function(){return function(e){var n,t=e.defaultValue,r=e.tabValues;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!f({value:t,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+r.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}var a=null!=(n=r.find((function(e){return e.default})))?n:r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:o,tabValues:p})})),w=v[0],g=v[1],h=m({queryString:u,groupId:s}),b=h[0],y=h[1],k=(n=function(e){return e?"docusaurus.tab."+e:null}({groupId:s}.groupId),t=(0,c.Nk)(n),r=t[0],i=t[1],[r,(0,a.useCallback)((function(e){n&&i.set(e)}),[n,i])]),N=k[0],D=k[1],C=function(){var e=null!=b?b:N;return f({value:e,tabValues:p})?e:null}();return(0,a.useLayoutEffect)((function(){C&&g(C)}),[C]),{selectedValue:w,selectValue:(0,a.useCallback)((function(e){if(!f({value:e,tabValues:p}))throw new Error("Can't select invalid tab value="+e);g(e),y(e),D(e)}),[y,D,p]),tabValues:p}}var w=t(72389),g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){var n=e.className,t=e.block,l=e.selectedValue,u=e.selectValue,s=e.tabValues,c=[],p=(0,o.o5)().blockElementScrollPositionUntilNextRender,d=function(e){var n=e.currentTarget,t=c.indexOf(n),r=s[t].value;r!==l&&(p(n),u(r))},f=function(e){var n,t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var r,a=c.indexOf(e.currentTarget)+1;t=null!=(r=c[a])?r:c[0];break;case"ArrowLeft":var i,o=c.indexOf(e.currentTarget)-1;t=null!=(i=c[o])?i:c[c.length-1]}null==(n=t)||n.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},n)},s.map((function(e){var n=e.value,t=e.label,o=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:function(e){return c.push(e)},onKeyDown:f,onClick:d},o,{className:(0,i.Z)("tabs__item",g.tabItem,null==o?void 0:o.className,{"tabs__item--active":l===n})}),null!=t?t:n)})))}function b(e){var n=e.lazy,t=e.children,r=e.selectedValue;if(t=Array.isArray(t)?t:[t],n){var i=t.find((function(e){return e.props.value===r}));return i?(0,a.cloneElement)(i,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},t.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r})})))}function y(e){var n=v(e);return a.createElement("div",{className:(0,i.Z)("tabs-container",g.tabList)},a.createElement(h,(0,r.Z)({},e,n)),a.createElement(b,(0,r.Z)({},e,n)))}function k(e){var n=(0,w.Z)();return a.createElement(y,(0,r.Z)({key:String(n)},e))}},81539:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var r=t(83117),a=t(80102),i=(t(67294),t(3905)),o=(t(74866),t(85162),["components"]),l={id:"multiple-drawers",title:"Multiple drawers",sidebar_label:"Multiple drawers"},u=void 0,s={unversionedId:"multiple-drawers",id:"version-6.x/multiple-drawers",title:"Multiple drawers",description:"Sometimes we want to have multiple drawers on the same screen: one on the left and one on the right. This can be achieved by nesting 2 drawer navigators.",source:"@site/versioned_docs/version-6.x/multiple-drawers.md",sourceDirName:".",slug:"/multiple-drawers",permalink:"/docs/multiple-drawers",draft:!1,editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-6.x/multiple-drawers.md",tags:[],version:"6.x",frontMatter:{id:"multiple-drawers",title:"Multiple drawers",sidebar_label:"Multiple drawers"},sidebar:"version-6.x/docs",previous:{title:"Opening a modal",permalink:"/docs/modal"},next:{title:"Screen options with nested navigators",permalink:"/docs/screen-options-resolution"}},c={},p=[{value:"Nesting 2 drawer navigators",id:"nesting-2-drawer-navigators",level:2},{value:"Summary",id:"summary",level:2}],d={toc:p},f="wrapper";function m(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)(f,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Sometimes we want to have multiple drawers on the same screen: one on the left and one on the right. This can be achieved by ",(0,i.kt)("a",{parentName:"p",href:"/docs/nesting-navigators"},"nesting")," 2 ",(0,i.kt)("a",{parentName:"p",href:"/docs/drawer-navigator"},"drawer navigators"),"."),(0,i.kt)("h2",{id:"nesting-2-drawer-navigators"},"Nesting 2 drawer navigators"),(0,i.kt)("p",null,"Here we have 2 drawers nested inside each other, one is positioned on left and the other on the right:"),(0,i.kt)("samp",{id:"multiple-drawers-issue"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport { Button, View } from 'react-native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\n\nfunction HomeScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Button onPress={() => navigation.openDrawer()} title=\"Open drawer\" />\n    </View>\n  );\n}\n\nconst LeftDrawer = createDrawerNavigator();\n\nconst LeftDrawerScreen = () => {\n  return (\n    <LeftDrawer.Navigator screenOptions={{ drawerPosition: 'left' }}>\n      <LeftDrawer.Screen name=\"Home\" component={HomeScreen} />\n    </LeftDrawer.Navigator>\n  );\n};\n\nconst RightDrawer = createDrawerNavigator();\n\nconst RightDrawerScreen = () => {\n  return (\n    <RightDrawer.Navigator\n      screenOptions={{ drawerPosition: 'right', headerShown: false }}\n    >\n      <RightDrawer.Screen name=\"HomeDrawer\" component={LeftDrawerScreen} />\n    </RightDrawer.Navigator>\n  );\n};\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <RightDrawerScreen />\n    </NavigationContainer>\n  );\n}\n")),(0,i.kt)("p",null,"But there is one problem. When we call ",(0,i.kt)("inlineCode",{parentName:"p"},"navigation.openDrawer()")," in our ",(0,i.kt)("inlineCode",{parentName:"p"},"HomeScreen"),", it always opens the left drawer since it's the immediate parent of the screen."),(0,i.kt)("p",null,"To solve this, we need to use ",(0,i.kt)("a",{parentName:"p",href:"/docs/navigation-prop#getparent"},(0,i.kt)("inlineCode",{parentName:"a"},"navigation.getParent"))," to refer to the right drawer which is the parent of the left drawer. So our code would look like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'<Button onPress={() => navigation.openDrawer()} title="Open left drawer" />\n<Button onPress={() => navigation.getParent().openDrawer()} title="Open right drawer" />\n')),(0,i.kt)("p",null,"However, this means that our button needs to know about the parent navigators, which isn't ideal. If our button is further nested inside other navigators, it'd need multiple ",(0,i.kt)("inlineCode",{parentName:"p"},"getParent()")," calls. To address this, we can use the ",(0,i.kt)("a",{parentName:"p",href:"/docs/drawer-navigator#id"},(0,i.kt)("inlineCode",{parentName:"a"},"id")," prop")," to identify the parent navigator."),(0,i.kt)("p",null,"To customize the contents of the drawer, we can use the ",(0,i.kt)("a",{parentName:"p",href:"/docs/drawer-navigator#drawercontent"},(0,i.kt)("inlineCode",{parentName:"a"},"drawerContent")," prop")," to pass in a function that renders a custom component."),(0,i.kt)("p",null,"The final code would look like this:"),(0,i.kt)("samp",{id:"multiple-drawers"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport { Button, Text, View } from 'react-native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\n\nfunction HomeScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Button\n        onPress={() => navigation.getParent('LeftDrawer').openDrawer()}\n        title=\"Open left drawer\"\n      />\n      <Button\n        onPress={() => navigation.getParent('RightDrawer').openDrawer()}\n        title=\"Open right drawer\"\n      />\n    </View>\n  );\n}\n\nfunction RightDrawerContent() {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>This is the right drawer</Text>\n    </View>\n  );\n}\n\nconst LeftDrawer = createDrawerNavigator();\n\nfunction LeftDrawerScreen() {\n  return (\n    <LeftDrawer.Navigator\n      id=\"LeftDrawer\"\n      screenOptions={{ drawerPosition: 'left' }}>\n      <LeftDrawer.Screen name=\"Home\" component={HomeScreen} />\n    </LeftDrawer.Navigator>\n  );\n}\n\nconst RightDrawer = createDrawerNavigator();\n\nfunction RightDrawerScreen() {\n  return (\n    <RightDrawer.Navigator\n      id=\"RightDrawer\"\n      drawerContent={(props) => <RightDrawerContent {...props} />}\n      screenOptions={{\n        drawerPosition: 'right',\n        headerShown: false,\n      }}>\n      <RightDrawer.Screen name=\"HomeDrawer\" component={LeftDrawerScreen} />\n    </RightDrawer.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <RightDrawerScreen />\n    </NavigationContainer>\n  );\n}\n\n")),(0,i.kt)("p",null,"Here, we are passing ",(0,i.kt)("inlineCode",{parentName:"p"},'"LeftDrawer"')," and ",(0,i.kt)("inlineCode",{parentName:"p"},'"RightDrawer"')," strings (you can use any string here) in the ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," prop of the drawer navigators. Then we use ",(0,i.kt)("inlineCode",{parentName:"p"},"navigation.getParent('LeftDrawer').openDrawer()")," to open the left drawer and ",(0,i.kt)("inlineCode",{parentName:"p"},"navigation.getParent('RightDrawer').openDrawer()")," to open the right drawer."),(0,i.kt)("h2",{id:"summary"},"Summary"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"To have 2 drawers on the screen, you can use the ",(0,i.kt)("a",{parentName:"li",href:"/docs/drawer-navigator#drawerposition"},(0,i.kt)("inlineCode",{parentName:"a"},"drawerPosition"))," option to position them on ",(0,i.kt)("inlineCode",{parentName:"li"},'"left"')," and ",(0,i.kt)("inlineCode",{parentName:"li"},'"right"'),"."),(0,i.kt)("li",{parentName:"ul"},"To open the desired drawer, you can use ",(0,i.kt)("a",{parentName:"li",href:"/docs/navigation-prop#getparent"},(0,i.kt)("inlineCode",{parentName:"a"},"navigation.getParent"))," in combination with the ",(0,i.kt)("a",{parentName:"li",href:"/docs/drawer-navigator#id"},(0,i.kt)("inlineCode",{parentName:"a"},"id")," prop"),".")))}m.isMDXComponent=!0}}]);