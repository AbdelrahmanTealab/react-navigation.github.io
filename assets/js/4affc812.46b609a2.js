"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([[41941],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,h=m["".concat(u,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:function(e,t,n){n.d(t,{Z:function(){return i}});var r=n(67294),a=n(86010),o={tabItem:"tabItem_Ymn6"};function i(e){var t=e.children,n=e.hidden,i=e.className;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,i),hidden:n},t)}},74866:function(e,t,n){n.d(t,{Z:function(){return N}});var r=n(83117),a=n(67294),o=n(86010),i=n(12466),l=n(16550),u=n(91980),s=n(67392),c=n(50012);function m(e){return function(e){return a.Children.map(e,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function p(e){var t=e.values,n=e.children;return(0,a.useMemo)((function(){var e=null!=t?t:m(n);return function(e){var t=(0,s.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function d(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function h(e){var t=e.queryString,n=void 0!==t&&t,r=e.groupId,o=(0,l.k6)(),i=function(e){var t=e.queryString,n=void 0!==t&&t,r=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=r?r:null}({queryString:n,groupId:r});return[(0,u._X)(i),(0,a.useCallback)((function(e){if(i){var t=new URLSearchParams(o.location.search);t.set(i,e),o.replace(Object.assign({},o.location,{search:t.toString()}))}}),[i,o])]}function f(e){var t,n,r,o,i=e.defaultValue,l=e.queryString,u=void 0!==l&&l,s=e.groupId,m=p(e),f=(0,a.useState)((function(){return function(e){var t,n=e.defaultValue,r=e.tabValues;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+r.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var a=null!=(t=r.find((function(e){return e.default})))?t:r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:i,tabValues:m})})),v=f[0],g=f[1],b=h({queryString:u,groupId:s}),k=b[0],y=b[1],N=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:s}.groupId),n=(0,c.Nk)(t),r=n[0],o=n[1],[r,(0,a.useCallback)((function(e){t&&o.set(e)}),[t,o])]),T=N[0],w=N[1],C=function(){var e=null!=k?k:T;return d({value:e,tabValues:m})?e:null}();return(0,a.useLayoutEffect)((function(){C&&g(C)}),[C]),{selectedValue:v,selectValue:(0,a.useCallback)((function(e){if(!d({value:e,tabValues:m}))throw new Error("Can't select invalid tab value="+e);g(e),y(e),w(e)}),[y,w,m]),tabValues:m}}var v=n(72389),g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){var t=e.className,n=e.block,l=e.selectedValue,u=e.selectValue,s=e.tabValues,c=[],m=(0,i.o5)().blockElementScrollPositionUntilNextRender,p=function(e){var t=e.currentTarget,n=c.indexOf(t),r=s[n].value;r!==l&&(m(t),u(r))},d=function(e){var t,n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":var r,a=c.indexOf(e.currentTarget)+1;n=null!=(r=c[a])?r:c[0];break;case"ArrowLeft":var o,i=c.indexOf(e.currentTarget)-1;n=null!=(o=c[i])?o:c[c.length-1]}null==(t=n)||t.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},s.map((function(e){var t=e.value,n=e.label,i=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:function(e){return c.push(e)},onKeyDown:d,onClick:p},i,{className:(0,o.Z)("tabs__item",g.tabItem,null==i?void 0:i.className,{"tabs__item--active":l===t})}),null!=n?n:t)})))}function k(e){var t=e.lazy,n=e.children,r=e.selectedValue;if(n=Array.isArray(n)?n:[n],t){var o=n.find((function(e){return e.props.value===r}));return o?(0,a.cloneElement)(o,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},n.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r})})))}function y(e){var t=f(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",g.tabList)},a.createElement(b,(0,r.Z)({},e,t)),a.createElement(k,(0,r.Z)({},e,t)))}function N(e){var t=(0,v.Z)();return a.createElement(y,(0,r.Z)({key:String(t)},e))}},55137:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return m}});var r=n(83117),a=n(80102),o=(n(67294),n(3905)),i=(n(74866),n(85162),["components"]),l={id:"themes",title:"Themes",sidebar_label:"Themes"},u=void 0,s={unversionedId:"themes",id:"version-7.x/themes",title:"Themes",description:"Themes allow you to change the colors of various components provided by React Navigation. You can use themes to:",source:"@site/versioned_docs/version-7.x/themes.md",sourceDirName:".",slug:"/themes",permalink:"/docs/7.x/themes",draft:!1,editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-7.x/themes.md",tags:[],version:"7.x",frontMatter:{id:"themes",title:"Themes",sidebar_label:"Themes"},sidebar:"version-7.x/docs",previous:{title:"Screen tracking for analytics",permalink:"/docs/7.x/screen-tracking"},next:{title:"State persistence",permalink:"/docs/7.x/state-persistence"}},c={},m=[{value:"Basic usage",id:"basic-usage",level:2},{value:"Built-in themes",id:"built-in-themes",level:2},{value:"Using the operating system preferences",id:"using-the-operating-system-preferences",level:2},{value:"Using the current theme in your own components",id:"using-the-current-theme-in-your-own-components",level:2}],p={toc:m},d="wrapper";function h(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Themes allow you to change the colors of various components provided by React Navigation. You can use themes to:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Customize the colors match your brand"),(0,o.kt)("li",{parentName:"ul"},"Provide light and dark themes based on the time of the day or user preference")),(0,o.kt)("h2",{id:"basic-usage"},"Basic usage"),(0,o.kt)("p",null,"To pass a custom theme, you can pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"theme")," prop to the navigation container."),(0,o.kt)("samp",{id:"simple-theme"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\n\nconst MyTheme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: 'rgb(255, 45, 85)',\n  },\n};\n\nexport default function App() {\n  return (\n    <NavigationContainer theme={MyTheme}>{/* content */}</NavigationContainer>\n  );\n}\n")),(0,o.kt)("p",null,"You can change the theme prop dynamically and all the components will automatically update to reflect the new theme. If you haven't provided a ",(0,o.kt)("inlineCode",{parentName:"p"},"theme")," prop, the default theme will be used."),(0,o.kt)("p",null,"A theme is a JS object containing a list of colors to use. It contains the following properties:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"dark")," (",(0,o.kt)("inlineCode",{parentName:"li"},"boolean"),"): Whether this is a dark theme or a light theme"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"colors")," (",(0,o.kt)("inlineCode",{parentName:"li"},"object"),"): Various colors used by react navigation components:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"primary")," (",(0,o.kt)("inlineCode",{parentName:"li"},"string"),"): The primary color of the app used to tint various elements. Usually you'll want to use your brand color for this."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"background")," (",(0,o.kt)("inlineCode",{parentName:"li"},"string"),"): The color of various backgrounds, such as background color for the screens."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"card")," (",(0,o.kt)("inlineCode",{parentName:"li"},"string"),"): The background color of card-like elements, such as headers, tab bars etc."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"text")," (",(0,o.kt)("inlineCode",{parentName:"li"},"string"),"): The text color of various elements."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"border")," (",(0,o.kt)("inlineCode",{parentName:"li"},"string"),"): The color of borders, e.g. header border, tab bar border etc."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"notification")," (",(0,o.kt)("inlineCode",{parentName:"li"},"string"),"): The color of Tab Navigator badge.")))),(0,o.kt)("p",null,"When creating a custom theme, you will need to provide all of these properties."),(0,o.kt)("p",null,"Example theme:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const MyTheme = {\n  dark: false,\n  colors: {\n    primary: 'rgb(255, 45, 85)',\n    background: 'rgb(242, 242, 242)',\n    card: 'rgb(255, 255, 255)',\n    text: 'rgb(28, 28, 30)',\n    border: 'rgb(199, 199, 204)',\n    notification: 'rgb(255, 69, 58)',\n  },\n};\n")),(0,o.kt)("p",null,"Providing a theme will take care of styling of all the official navigators. React Navigation also provides several tools to help you make your customizations of those navigators and the screens within the navigators can use the theme too."),(0,o.kt)("h2",{id:"built-in-themes"},"Built-in themes"),(0,o.kt)("p",null,"As operating systems add built-in support for light and dark modes, supporting dark mode is less about keeping hip to trends and more about conforming to the average user expectations for how apps should work. In order to provide support for light and dark mode in a way that is reasonably consistent with the OS defaults, these themes are built in to React Navigation."),(0,o.kt)("p",null,"You can import the default and dark themes like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { DefaultTheme, DarkTheme } from '@react-navigation/native';\n")),(0,o.kt)("h2",{id:"using-the-operating-system-preferences"},"Using the operating system preferences"),(0,o.kt)("p",null,"On iOS 13+ and Android 10+, you can get user's preferred color scheme (",(0,o.kt)("inlineCode",{parentName:"p"},"'dark'")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"'light'"),") with the (",(0,o.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/appearance"},"Appearance API"),")."),(0,o.kt)("samp",{id:"system-themes"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { useColorScheme } from 'react-native';\nimport {\n  NavigationContainer,\n  DefaultTheme,\n  DarkTheme,\n} from '@react-navigation/native';\n\nexport default () => {\n  const scheme = useColorScheme();\n\n  return (\n    <NavigationContainer theme={scheme === 'dark' ? DarkTheme : DefaultTheme}>\n      {/* content */}\n    </NavigationContainer>\n  );\n};\n")),(0,o.kt)("h2",{id:"using-the-current-theme-in-your-own-components"},"Using the current theme in your own components"),(0,o.kt)("p",null,"To gain access to the theme in any component that is rendered inside the navigation container:, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"useTheme")," hook. It returns the theme object:"),(0,o.kt)("samp",{id:"system-themes"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport { TouchableOpacity, Text } from 'react-native';\nimport { useTheme } from '@react-navigation/native';\n\n// Black background and white text in light theme, inverted on dark theme\nfunction MyButton() {\n  const { colors } = useTheme();\n\n  return (\n    <TouchableOpacity style={{ backgroundColor: colors.card }}>\n      <Text style={{ color: colors.text }}>Button!</Text>\n    </TouchableOpacity>\n  );\n}\n")))}h.isMDXComponent=!0}}]);